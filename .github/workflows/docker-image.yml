name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Build the Docker image
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        majer_patter: "major:"
        minor_patter: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Buildx
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker buildx create --name mybuilder
        docker buildx use mybuilder
        docker buildx inspect --bootstrap
        docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t afuniba/ascii_art:$NEW_VERSION --push .
    - name: Build Docker Image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker build -t afuniba/ascii_art:$NEW_VERSION .
        docker build -t afuniba/ascii_art:latest .
    - name: Push Docker Image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker push afuniba/ascii_art:$NEW_VERSION
        docker build -t afuniba/ascii_art:latest .
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
